<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<contentHaul xmlns:a="http://www.appian.com/ae/types/2009">
    <versionUuid>_a-0000e1be-2cd8-8000-29b4-01ef9001ef90_169105</versionUuid>
    <rule>
        <name>test_continentCountryStateHierarchy</name>
        <uuid>_a-0000e1be-2cd8-8000-29b4-01ef9001ef90_168935</uuid>
        <description></description>
        <parentUuid>_a-0000e07f-a897-8000-29b4-01ef9001ef90_55156</parentUuid>
        <visibility>
            <advertise>false</advertise>
            <hierarchy>true</hierarchy>
            <indexable>true</indexable>
            <quota>false</quota>
            <searchable>true</searchable>
            <system>false</system>
            <unlogged>false</unlogged>
        </visibility>
        <definition> with(
  local!child: index(
    ri!continentCountryStateData,
    wherecontains(
      ri!continent.id,
      ri!continentCountryStateData.parent
    ),
    {}
  ),
  local!peerNodes: difference(
    index(
      ri!continentCountryStateData,
      wherecontains(
        ri!continent.parent,
        ri!continentCountryStateData.parent
      ),
      {}
    ),
    ri!continent
  ),
  {
    #"SYSTEM_SYSRULES_richTextDisplayField"(
      value: {
        #"SYSTEM_SYSRULES_richTextItem_v1"(
          text: repeat(
            length(
              ri!parent
            ),
            char(
              32
            ) &amp; char(
              32
            ) &amp; char(
              32
            )
          )
        ),
        if(
          length(
            local!child
          ) &gt; 0,
          #"SYSTEM_SYSRULES_richTextIcon"(
            size: "MEDIUM",
            icon: if(
              contains(
                ri!tree,
                local!child
              ),
              "minus-square-o",
              "plus-square-o"
            ),
            linkStyle: "STANDALONE",
            link: #"SYSTEM_SYSRULES_dynamicLink"(
              value: ri!continent,
              saveInto: {
                a!save(
                  ri!tree,
                  if(
                    contains(
                      ri!tree,
                      local!child
                    ),
                    remove(
                      ri!tree,
                      wherecontains(
                        local!child,
                        ri!tree
                      )
                    ),
                    insert(
                      ri!tree,
                      local!child,
                      ri!index + 1
                    )
                  )
                )
              }
            )
          ),
          #"SYSTEM_SYSRULES_richTextItem_v1"(
            text: char(
              32
            ) &amp; char(
              32
            ) &amp; char(
              32
            ) &amp; char(
              32
            ) &amp; char(
              32
            )
          )
        ),
        #"SYSTEM_SYSRULES_richTextItem_v1"(
          text: char(
            32
          )
        ),
        #"SYSTEM_SYSRULES_richTextIcon"(
          icon: if(
            contains(
              ri!selectedValue,
              ri!continent
            ),
            "check-square-o",
            "square-o"
          ),
          size: "MEDIUM",
          color: "POSITIVE",
          linkStyle: "STANDALONE",
          link: #"SYSTEM_SYSRULES_dynamicLink"(
            value: ri!continent,
            saveInto: {
              a!save(
                ri!selectedValue,
                if(
                  contains(
                    ri!selectedValue,
                    ri!continent
                  ),
                  remove(
                    ri!selectedValue,
                    wherecontains(
                      append(
                        {
                          ri!continent
                        },
                        #"_a-0000e1be-2cd8-8000-29b4-01ef9001ef90_169030"(
                          continentCountryStateData: ri!continentCountryStateData,
                          continent: ri!continent,
                          childNodes: {}
                        ),
                        ri!parent
                      ),
                      ri!selectedValue
                    )
                  ),
                  #"_a-0000e1be-2cd8-8000-29b4-01ef9001ef90_169087"(
                    continentCountryStateData:ri!continentCountryStateData,
                    continent:ri!continent,
                    parentNodes : ri!parent,
                    selectedValues:append(
                    ri!selectedValue,
                    append(
                      {
                        ri!continent
                      },
                      #"_a-0000e1be-2cd8-8000-29b4-01ef9001ef90_169030"(
                        continentCountryStateData: ri!continentCountryStateData,
                        continent: ri!continent,
                        childNodes: {}
                      )
                      
                    )
                  )
                  )
                )
              )
            }
          )
        ),
        #"SYSTEM_SYSRULES_richTextItem_v1"(
          text: char(
            32
          )
        ),
        #"SYSTEM_SYSRULES_richTextItem_v1"(
          text: ri!continent.name
        )
      }
    ),
    if(
      contains(
        ri!tree,
        local!child
      ),
      #"SYSTEM_SYSRULES_forEach"(
        items: local!child,
        expression: #"_a-0000e1be-2cd8-8000-29b4-01ef9001ef90_168935"(
          continentCountryStateData: ri!continentCountryStateData,
          continent: fv!item,
          tree: ri!tree,
          selectedValue: ri!selectedValue,
          index: ri!index + fv!index,
          parent: append(
            ri!parent,
            ri!continent
          )
        )
      ),
      {}
    )
  }
)</definition>
        <namedTypedValue>
            <name>continentCountryStateData</name>
            <type>
                <name>treeNode?list</name>
                <namespace>urn:com:appian:types</namespace>
            </type>
        </namedTypedValue>
        <namedTypedValue>
            <name>tree</name>
            <type>
                <name>treeNode?list</name>
                <namespace>urn:com:appian:types</namespace>
            </type>
        </namedTypedValue>
        <namedTypedValue>
            <name>selectedValue</name>
            <type>
                <name>treeNode?list</name>
                <namespace>urn:com:appian:types</namespace>
            </type>
        </namedTypedValue>
        <namedTypedValue>
            <name>index</name>
            <type>
                <name>int</name>
                <namespace>http://www.w3.org/2001/XMLSchema</namespace>
            </type>
        </namedTypedValue>
        <namedTypedValue>
            <name>parent</name>
            <type>
                <name>treeNode?list</name>
                <namespace>urn:com:appian:types</namespace>
            </type>
        </namedTypedValue>
        <namedTypedValue>
            <name>continent</name>
            <type>
                <name>treeNode</name>
                <namespace>urn:com:appian:types</namespace>
            </type>
        </namedTypedValue>
        <metadataExpr></metadataExpr>
        <preferredEditor>interface</preferredEditor>
        <offlineEnabled>false</offlineEnabled>
    </rule>
    <roleMap public="true">
        <role inherit="true" allowForAll="false" name="readers">
            <users/>
            <groups/>
        </role>
        <role inherit="true" allowForAll="false" name="authors">
            <users/>
            <groups/>
        </role>
        <role inherit="true" allowForAll="false" name="administrators">
            <users/>
            <groups/>
        </role>
        <role inherit="false" allowForAll="false" name="denyReaders">
            <users/>
            <groups/>
        </role>
        <role inherit="false" allowForAll="false" name="denyAuthors">
            <users/>
            <groups/>
        </role>
        <role inherit="false" allowForAll="false" name="denyAdministrators">
            <users/>
            <groups/>
        </role>
    </roleMap>
    <typedValue>
        <type>
            <name>RuleTestConfig?list</name>
            <namespace>http://www.appian.com/ae/types/2009</namespace>
        </type>
        <value>
            <el>
                <a:name/>
                <a:ruleInputTestConfigs>
                    <a:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="a:Expression">{
    {
      id: 1,
      name: "Asia",
      parent: null()
    },
    {
      id: 2,
      name: "China",
      parent: 1
    },
    {
      id: 3,
      name: "Japan",
      parent: 1
    },
    {
      id: 4,
      name: "Mongololia",
      parent: 1
    },
    {
      id: 5,
      name: "North America",
      parent: null()
    },
    {
      id: 6,
      name: "USA",
      parent: 5
    },
    {
      id: 7,
      name: "Kansas",
      parent: 6
    },
    {
      id: 8,
      name: "Ohio",
      parent: 6
    },
    {
      id: 9,
      name: "Canada",
      parent: 5
    },
    {
      id: 10,
      name: "Mexico",
      parent: 5
    },
    {
      id: 11,
      name: "South America",
      parent: null()
    },
    {
      id: 12,
      name: "Brazil",
      parent: 11
    },
    {
      id: 13,
      name: "Europe",
      parent: null()
    },
    {
      id: 14,
      name: "France",
      parent: 13,
      path: "13"
    }
  }</a:value>
                    <a:nameRef>continentCountryStateData</a:nameRef>
                    <a:id/>
                </a:ruleInputTestConfigs>
                <a:ruleInputTestConfigs>
                    <a:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="a:Expression">{
  {
      id: 1,
      name: "Asia",
      parent: null()
    },
    {
      id: 5,
      name: "North America",
      parent: null()
    },
    {
      id: 11,
      name: "South America",
      parent: null()
    },
    {
      id: 13,
      name: "Europe",
      parent: null()
    }
}</a:value>
                    <a:nameRef>tree</a:nameRef>
                    <a:id/>
                </a:ruleInputTestConfigs>
                <a:ruleInputTestConfigs>
                    <a:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="a:Expression">{}</a:value>
                    <a:nameRef>selectedValue</a:nameRef>
                    <a:id/>
                </a:ruleInputTestConfigs>
                <a:ruleInputTestConfigs>
                    <a:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="a:Expression">2</a:value>
                    <a:nameRef>index</a:nameRef>
                    <a:id/>
                </a:ruleInputTestConfigs>
                <a:ruleInputTestConfigs>
                    <a:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="a:Expression">{}</a:value>
                    <a:nameRef>parent</a:nameRef>
                    <a:id/>
                </a:ruleInputTestConfigs>
                <a:ruleInputTestConfigs>
                    <a:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="a:Expression">{
      id: 5,
      name: "North America",
      parent: null()
    }</a:value>
                    <a:nameRef>continent</a:nameRef>
                    <a:id/>
                </a:ruleInputTestConfigs>
                <a:assertions xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:nil="true"/>
            </el>
        </value>
    </typedValue>
    <history>
        <historyInfo versionUuid="_a-0000e1be-2cd8-8000-29b4-01ef9001ef90_169105"/>
    </history>
</contentHaul>

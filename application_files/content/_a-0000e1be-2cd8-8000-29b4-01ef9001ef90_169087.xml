<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<contentHaul xmlns:a="http://www.appian.com/ae/types/2009">
    <versionUuid>_a-0000e1be-2cd8-8000-29b4-01ef9001ef90_169122</versionUuid>
    <rule>
        <name>test_addParentIfAllChildSelected</name>
        <uuid>_a-0000e1be-2cd8-8000-29b4-01ef9001ef90_169087</uuid>
        <description></description>
        <parentUuid>_a-0000e07f-a897-8000-29b4-01ef9001ef90_55156</parentUuid>
        <visibility>
            <advertise>false</advertise>
            <hierarchy>true</hierarchy>
            <indexable>true</indexable>
            <quota>false</quota>
            <searchable>true</searchable>
            <system>false</system>
            <unlogged>false</unlogged>
        </visibility>
        <definition>with(
  local!peerNodes: index(
    ri!continentCountryStateData,
    wherecontains(
      ri!continent.parent,
      ri!continentCountryStateData.parent
    ),
    {}
  ),
  if(
    contains(
      ri!selectedValues,
      local!peerNodes
    ),
    #"_a-0000e1be-2cd8-8000-29b4-01ef9001ef90_169087"(
      continentCountryStateData: ri!continentCountryStateData,
      continent: index(
        ri!parentNodes,
        length(
          ri!parentNodes
        ),
        {}
      ),
      parentNodes: remove(
        ri!parentNodes,
        length(
          ri!parentNodes
        )
      ),
      selectedValues: append(
        ri!selectedValues,
        index(
          ri!parentNodes,
          length(
            ri!parentNodes
          ),
          {}
        )
      )
    ),
    ri!selectedValues
  )
)</definition>
        <namedTypedValue>
            <name>continentCountryStateData</name>
            <type>
                <name>treeNode?list</name>
                <namespace>urn:com:appian:types</namespace>
            </type>
        </namedTypedValue>
        <namedTypedValue>
            <name>continent</name>
            <type>
                <name>treeNode?list</name>
                <namespace>urn:com:appian:types</namespace>
            </type>
        </namedTypedValue>
        <namedTypedValue>
            <name>parentNodes</name>
            <type>
                <name>treeNode?list</name>
                <namespace>urn:com:appian:types</namespace>
            </type>
        </namedTypedValue>
        <namedTypedValue>
            <name>selectedValues</name>
            <type>
                <name>treeNode?list</name>
                <namespace>urn:com:appian:types</namespace>
            </type>
        </namedTypedValue>
        <preferredEditor>legacy</preferredEditor>
        <offlineEnabled>false</offlineEnabled>
    </rule>
    <roleMap public="true">
        <role inherit="true" allowForAll="false" name="readers">
            <users/>
            <groups/>
        </role>
        <role inherit="true" allowForAll="false" name="authors">
            <users/>
            <groups/>
        </role>
        <role inherit="true" allowForAll="false" name="administrators">
            <users/>
            <groups/>
        </role>
        <role inherit="false" allowForAll="false" name="denyReaders">
            <users/>
            <groups/>
        </role>
        <role inherit="false" allowForAll="false" name="denyAuthors">
            <users/>
            <groups/>
        </role>
        <role inherit="false" allowForAll="false" name="denyAdministrators">
            <users/>
            <groups/>
        </role>
    </roleMap>
    <typedValue>
        <type>
            <name>RuleTestConfig?list</name>
            <namespace>http://www.appian.com/ae/types/2009</namespace>
        </type>
        <value>
            <el>
                <a:name>Get child of north america</a:name>
                <a:ruleInputTestConfigs>
                    <a:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="a:Expression">{
    {
      id: 1,
      name: "Asia",
      parent: null()
    },
    {
      id: 2,
      name: "China",
      parent: 1
    },
    {
      id: 3,
      name: "Japan",
      parent: 1
    },
    {
      id: 4,
      name: "Mongololia",
      parent: 1
    },
    {
      id: 5,
      name: "North America",
      parent: null()
    },
    {
      id: 6,
      name: "USA",
      parent: 5
    },
    {
      id: 7,
      name: "Kansas",
      parent: 6
    },
    {
      id: 8,
      name: "Ohio",
      parent: 6
    },
    {
      id: 9,
      name: "Canada",
      parent: 5
    },
    {
      id: 10,
      name: "Mexico",
      parent: 5
    },
    {
      id: 11,
      name: "South America",
      parent: null()
    },
    {
      id: 12,
      name: "Brazil",
      parent: 11
    },
    {
      id: 13,
      name: "Europe",
      parent: null()
    },
    {
      id: 14,
      name: "France",
      parent: 13,
      path: "13"
    }
  }</a:value>
                    <a:nameRef>continentCountryStateData</a:nameRef>
                    <a:id>1</a:id>
                </a:ruleInputTestConfigs>
                <a:ruleInputTestConfigs>
                    <a:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="a:Expression">{
      id: 5,
      name: "North America",
      parent: null()
    }</a:value>
                    <a:nameRef>continent</a:nameRef>
                    <a:id>2</a:id>
                </a:ruleInputTestConfigs>
                <a:ruleInputTestConfigs>
                    <a:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:nil="true"/>
                    <a:nameRef>parentNodes</a:nameRef>
                    <a:id>3</a:id>
                </a:ruleInputTestConfigs>
                <a:ruleInputTestConfigs>
                    <a:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:nil="true"/>
                    <a:nameRef>selectedValues</a:nameRef>
                    <a:id>4</a:id>
                </a:ruleInputTestConfigs>
                <a:assertions xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:nil="true"/>
            </el>
            <el>
                <a:name>Get All parents if all child is selected</a:name>
                <a:ruleInputTestConfigs>
                    <a:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="a:Expression">{'type!{urn:com:appian:types}treeNode'('id': 1, 'name': "Asia"), 'type!{urn:com:appian:types}treeNode'('id': 2, 'name': "China", 'parent': 1), 'type!{urn:com:appian:types}treeNode'('id': 3, 'name': "Japan", 'parent': 1), 'type!{urn:com:appian:types}treeNode'('id': 4, 'name': "Mongololia", 'parent': 1), 'type!{urn:com:appian:types}treeNode'('id': 5, 'name': "North America"), 'type!{urn:com:appian:types}treeNode'('id': 6, 'name': "USA", 'parent': 5), 'type!{urn:com:appian:types}treeNode'('id': 7, 'name': "Kansas", 'parent': 6), 'type!{urn:com:appian:types}treeNode'('id': 8, 'name': "Ohio", 'parent': 6), 'type!{urn:com:appian:types}treeNode'('id': 9, 'name': "Canada", 'parent': 5), 'type!{urn:com:appian:types}treeNode'('id': 10, 'name': "Mexico", 'parent': 5), 'type!{urn:com:appian:types}treeNode'('id': 11, 'name': "South America"), 'type!{urn:com:appian:types}treeNode'('id': 12, 'name': "Brazil", 'parent': 11), 'type!{urn:com:appian:types}treeNode'('id': 13, 'name': "Europe"), 'type!{urn:com:appian:types}treeNode'('id': 14, 'name': "France", 'parent': 13)}</a:value>
                    <a:nameRef>continentCountryStateData</a:nameRef>
                    <a:id>1</a:id>
                </a:ruleInputTestConfigs>
                <a:ruleInputTestConfigs>
                    <a:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="a:Expression">'type!{urn:com:appian:types}treeNode'('id': 8, 'name': "Ohio", 'parent': 6)</a:value>
                    <a:nameRef>continent</a:nameRef>
                    <a:id>2</a:id>
                </a:ruleInputTestConfigs>
                <a:ruleInputTestConfigs>
                    <a:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="a:Expression">{'type!{urn:com:appian:types}treeNode'('id': 5, 'name': "North America"),'type!{urn:com:appian:types}treeNode'('id': 6, 'name': "USA", 'parent': 5)}</a:value>
                    <a:nameRef>parentNodes</a:nameRef>
                    <a:id>3</a:id>
                </a:ruleInputTestConfigs>
                <a:ruleInputTestConfigs>
                    <a:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="a:Expression">{'type!{urn:com:appian:types}treeNode'('id': 9, 'name': "Canada", 'parent': 5), 'type!{urn:com:appian:types}treeNode'('id': 10, 'name': "Mexico", 'parent': 5), 'type!{urn:com:appian:types}treeNode'('id': 7, 'name': "Kansas", 'parent': 6), 'type!{urn:com:appian:types}treeNode'('id': 8, 'name': "Ohio", 'parent': 6)}</a:value>
                    <a:nameRef>selectedValues</a:nameRef>
                    <a:id>4</a:id>
                </a:ruleInputTestConfigs>
                <a:assertions xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:nil="true"/>
            </el>
        </value>
    </typedValue>
    <history>
        <historyInfo versionUuid="_a-0000e1be-2cd8-8000-29b4-01ef9001ef90_169122"/>
    </history>
</contentHaul>
